(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{122:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return m})),a.d(t,"rightToc",(function(){return p})),a.d(t,"default",(function(){return b}));var n=a(1),r=a(6),l=(a(0),a(261)),s=a(255),o=a(262),i=a(263),c={description:"The Vector `grok_parser` transform accepts `log` events and allows you to parse a log field value with Grok.",event_types:["log"],issues_url:"https://github.com/timberio/vector/issues?q=is%3Aopen+is%3Aissue+label%3A%22transform%3A+grok_parser%22",sidebar_label:'grok_parser|["log"]',source_url:"https://github.com/timberio/vector/tree/master/src/transforms/grok_parser.rs",status:"prod-ready",title:"Grok Parser Transform"},m={id:"reference/transforms/grok_parser",title:"Grok Parser Transform",description:"The Vector `grok_parser` transform accepts `log` events and allows you to parse a log field value with Grok.",source:"@site/docs/reference/transforms/grok_parser.md",permalink:"/docs/reference/transforms/grok_parser",editUrl:"https://github.com/timberio/vector/edit/master/website/docs/reference/transforms/grok_parser.md",sidebar_label:'grok_parser|["log"]',sidebar:"docs",previous:{title:"GeoIP Transform",permalink:"/docs/reference/transforms/geoip"},next:{title:"JSON Parser Transform",permalink:"/docs/reference/transforms/json_parser"}},p=[{value:"Configuration",id:"configuration",children:[]},{value:"Options",id:"options",children:[{value:"drop_field",id:"drop_field",children:[]},{value:"field",id:"field",children:[]},{value:"pattern",id:"pattern",children:[]},{value:"types",id:"types",children:[]}]},{value:"How It Works",id:"how-it-works",children:[{value:"Available Patterns",id:"available-patterns",children:[]},{value:"Debugging",id:"debugging",children:[]},{value:"Environment Variables",id:"environment-variables",children:[]},{value:"Performance",id:"performance",children:[]}]}],u={rightToc:p},d="wrapper";function b(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(l.b)(d,Object(n.a)({},u,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"The Vector ",Object(l.b)("inlineCode",{parentName:"p"},"grok_parser")," transform accepts ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/about/data-model/log/"}),Object(l.b)("inlineCode",{parentName:"a"},"log"))," events and allows you to parse a log field value with ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"http://grokdebug.herokuapp.com/"}),"Grok"),"."),Object(l.b)("h2",{id:"configuration"},"Configuration"),Object(l.b)(s.a,{fileName:"vector.toml",learnMoreUrl:"/docs/setup/configuration/",mdxType:"CodeHeader"}),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-toml"}),'[transforms.my_transform_id]\n  # REQUIRED - General\n  type = "grok_parser" # must be: "grok_parser"\n  inputs = ["my-source-id"] # example\n  pattern = "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:level} %{GREEDYDATA:message}" # example\n\n  # OPTIONAL - General\n  drop_field = true # default\n  field = "message" # default\n\n  # OPTIONAL - Types\n  [transforms.my_transform_id.types]\n    status = "int" # example\n    duration = "float" # example\n    success = "bool" # example\n    timestamp = "timestamp|%s" # example\n    timestamp = "timestamp|%+" # example\n    timestamp = "timestamp|%F" # example\n    timestamp = "timestamp|%a %b %e %T %Y" # example\n')),Object(l.b)("h2",{id:"options"},"Options"),Object(l.b)(o.a,{filters:!0,mdxType:"Fields"},Object(l.b)(i.a,{common:!0,defaultValue:!0,enumValues:null,examples:[!0,!1],name:"drop_field",nullable:!1,path:null,relevantWhen:null,required:!1,templateable:!1,type:"bool",unit:null,mdxType:"Field"},Object(l.b)("h3",{id:"drop_field"},"drop_field"),Object(l.b)("p",null,"If ",Object(l.b)("inlineCode",{parentName:"p"},"true")," will drop the specified ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#field"}),Object(l.b)("inlineCode",{parentName:"a"},"field"))," after parsing.")),Object(l.b)(i.a,{common:!0,defaultValue:"message",enumValues:null,examples:["message"],name:"field",nullable:!1,path:null,relevantWhen:null,required:!1,templateable:!1,type:"string",unit:null,mdxType:"Field"},Object(l.b)("h3",{id:"field"},"field"),Object(l.b)("p",null,"The log field to execute the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#pattern"}),Object(l.b)("inlineCode",{parentName:"a"},"pattern"))," against. Must be a ",Object(l.b)("inlineCode",{parentName:"p"},"string")," value.")),Object(l.b)(i.a,{common:!0,defaultValue:null,enumValues:null,examples:["%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:level} %{GREEDYDATA:message}"],name:"pattern",nullable:!1,path:null,relevantWhen:null,required:!0,templateable:!1,type:"string",unit:null,mdxType:"Field"},Object(l.b)("h3",{id:"pattern"},"pattern"),Object(l.b)("p",null,"The ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/daschl/grok/tree/master/patterns"}),"Grok pattern"))),Object(l.b)(i.a,{common:!0,defaultValue:null,enumValues:null,examples:[],name:"types",nullable:!0,path:null,relevantWhen:null,required:!1,templateable:!1,type:"table",unit:null,mdxType:"Field"},Object(l.b)("h3",{id:"types"},"types"),Object(l.b)("p",null,"Key/Value pairs representing mapped log field types."),Object(l.b)(o.a,{filters:!1,mdxType:"Fields"},Object(l.b)(i.a,{common:!0,defaultValue:null,enumValues:{bool:'Coerces `"true"`/`/"false"`, `"1"`/`"0"`, and `"t"`/`"f"` values into boolean.',float:"Coerce to a 64 bit float.",int:"Coerce to a 64 bit integer.",string:"Coerce to a string.",timestamp:"Coerces to a Vector timestamp. [`strptime` specificiers][urls.strptime_specifiers] must be used to parse the string."},examples:[{status:"int"},{duration:"float"},{success:"bool"},{timestamp:"timestamp|%s"},{timestamp:"timestamp|%+"},{timestamp:"timestamp|%F"},{timestamp:"timestamp|%a %b %e %T %Y"}],name:"`[field-name]`",nullable:!1,path:"types",relevantWhen:null,required:!0,templateable:!1,type:"string",unit:null,mdxType:"Field"},Object(l.b)("h4",{id:"field-name"},Object(l.b)("inlineCode",{parentName:"h4"},"[field-name]")),Object(l.b)("p",null,"A definition of log field type conversions. They key is the log field name and the value is the type. ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://docs.rs/chrono/0.3.1/chrono/format/strftime/index.html"}),Object(l.b)("inlineCode",{parentName:"a"},"strptime")," specifiers")," are supported for the ",Object(l.b)("inlineCode",{parentName:"p"},"timestamp")," type."))))),Object(l.b)("h2",{id:"how-it-works"},"How It Works"),Object(l.b)("h3",{id:"available-patterns"},"Available Patterns"),Object(l.b)("p",null,"Vector uses the Rust ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/daschl/grok"}),Object(l.b)("inlineCode",{parentName:"a"},"grok")," library"),". All patterns\n",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/daschl/grok/tree/master/patterns"}),"listed here")," are supported. It is recommended to use\nmaintained patterns when possible since they can be improved over time by\nthe community."),Object(l.b)("h3",{id:"debugging"},"Debugging"),Object(l.b)("p",null,"We recommend the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"http://grokdebug.herokuapp.com/"}),"Grok debugger")," for Grok testing."),Object(l.b)("h3",{id:"environment-variables"},"Environment Variables"),Object(l.b)("p",null,"Environment variables are supported through all of Vector's configuration.\nSimply add ",Object(l.b)("inlineCode",{parentName:"p"},"${MY_ENV_VAR}")," in your Vector configuration file and the variable\nwill be replaced before being evaluated."),Object(l.b)("p",null,"You can learn more in the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/setup/configuration/#environment-variables"}),"Environment Variables"),"\nsection."),Object(l.b)("h3",{id:"performance"},"Performance"),Object(l.b)("p",null,"Grok is approximately 50% slower than the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/transforms/regex_parser/"}),Object(l.b)("inlineCode",{parentName:"a"},"regex_parser")," transform"),".\nWe plan to add a ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/#performance"}),"performance test")," for this in the future.\nWhile this is still plenty fast for most use cases we recommend using the\n",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/transforms/regex_parser/"}),Object(l.b)("inlineCode",{parentName:"a"},"regex_parser")," transform")," if you are experiencing\nperformance issues."))}b.isMDXComponent=!0},255:function(e,t,a){"use strict";var n=a(0),r=a.n(n);a(85);t.a=function({fileName:e,links:t}){let a=[];for(var n in t)a.push(r.a.createElement("a",{href:n.href},n.text||"Learn more&hellip;"));return r.a.createElement("div",{className:"code-header"},a.length>0&&r.a.createElement("span",{className:"code-header--links"},a),e)}},257:function(e,t,a){"use strict";(function(e){var n=a(1),r=a(0),l=a.n(r),s=a(277),o=a(268),i=a.n(o),c=a(267),m=a(253),p=a.n(m),u=a(275),d=a.n(u),b=a(269),f=a.n(b),h=a(254),g=a(86),O=a.n(g),v=a(265);(void 0!==e?e:window).Prism=c.a,a(270),a(271),a(272),a(273),a(274);const y=/{([\d,-]+)}/;t.a=({children:e,className:t,metastring:a})=>{const{siteConfig:{themeConfig:{prism:o={}}}}=Object(h.a)(),[c,m]=Object(r.useState)(!1),u=Object(r.useRef)(null),b=Object(r.useRef)(null),[g]=Object(v.a)();let j=[];if(a&&y.test(a)){const e=a.match(y)[1];j=f.a.parse(e).filter(e=>e>0)}Object(r.useEffect)(()=>{let e;return b.current&&(e=new i.a(b.current,{target:()=>u.current})),()=>{e&&e.destroy()}},[b.current,u.current]);let E=t&&t.replace(/language-/,"");!E&&o.defaultLanguage&&(E=o.defaultLanguage);const N=()=>{window.getSelection().empty(),m(!0),setTimeout(()=>m(!1),2e3)};let k="dark"==g?o.darkTheme:o.theme;return l.a.createElement(s.a,Object(n.a)({},s.b,{theme:k||d.a,code:e.trim(),language:E}),({className:e,style:t,tokens:a,getLineProps:r,getTokenProps:s})=>l.a.createElement("div",{className:O.a.codeBlockWrapper},l.a.createElement("pre",{ref:u,className:p()(e,O.a.codeBlock),style:t},a.map((e,t)=>{const a=r({line:e,key:t});return j.includes(t+1)&&(a.className=`${a.className} docusaurus-highlight-code-line`),l.a.createElement("div",Object(n.a)({key:t},a),e.map((e,t)=>l.a.createElement("span",Object(n.a)({key:t},s({token:e,key:t})))))})),l.a.createElement("button",{ref:b,type:"button","aria-label":"Copy code to clipboard",className:O.a.copyButton,onClick:N},c?"Copied":"Copy")))}}).call(this,a(48))},258:function(e,t,a){"use strict";a.d(t,"a",(function(){return p}));var n=a(0),r=a.n(n);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=r.a.createContext({}),m=function(e){var t=r.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):o({},t,{},e)),a},p=function(e){var t=m(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=m(a),d=n,b=p["".concat(s,".").concat(d)]||p[d]||u[d]||l;return a?r.a.createElement(b,o({ref:t},c,{components:a})):r.a.createElement(b,o({ref:t},c))}));d.displayName="MDXCreateElement"},262:function(e,t,a){"use strict";var n=a(0),r=a.n(n);a(87);t.a=function({children:e,filters:t}){const[a,l]=Object(n.useState)(!1),[s,o]=Object(n.useState)(!1),[i,c]=Object(n.useState)(null);let m=Array.isArray(e)?e:[e],p=m.some(e=>e.props.common),u=m.some(e=>e.props.required),d=m;return a&&(d=d.filter(e=>e.props.common)),s&&(d=d.filter(e=>e.props.required)),i&&(d=d.filter(e=>e.props.name.toLowerCase().includes(i.toLowerCase()))),r.a.createElement("div",{className:"fields"},m.length>1&&!1!==t?r.a.createElement("div",{className:"filters"},r.a.createElement("span",{className:"result-count"},d.length," items"),r.a.createElement("div",{className:" search"},r.a.createElement("input",{type:"text",onChange:e=>c(e.currentTarget.value),placeholder:"\ud83d\udd0d Search..."})),r.a.createElement("div",{className:"checkboxes"},p&&r.a.createElement("label",{title:"Only show popular/common results"},r.a.createElement("input",{type:"checkbox",onChange:e=>l(e.currentTarget.checked),checked:a}),"common only"),u&&r.a.createElement("label",{title:"Only show required results"},r.a.createElement("input",{type:"checkbox",onChange:e=>o(e.currentTarget.checked),checked:s}),"required only"))):null,r.a.createElement("div",{className:"section-list"},!Array.isArray(d)||d.length>0?d:r.a.createElement("div",{className:"empty"},r.a.createElement("div",{className:"icon"},"\u2639"),r.a.createElement("div",null,"No fields found"))))}},263:function(e,t,a){"use strict";a(266);var n=a(0),r=a.n(n),l=a(253),s=a.n(l),o=(a(258),a(255)),i=a(257);function c(e){return JSON.stringify(e)}function m(e){return e.includes(".")?'"'+e+'"':e}function p(e,t){return(a=t)&&a.constructor===Object?"name"in t&&"value"in t?`${m(t.name)} = ${c(t.value)}`:`${m(Object.keys(t)[0])} = ${c(Object.values(t)[0])}`:e?`${e} = ${c(t)}`:`${c(t)}`;var a}function u({values:e}){let t=[];if(Array.isArray(e))for(var a in e){let n=e[a];t.push(r.a.createElement("code",{key:n},c(n))),t.push(" ")}else for(var n in e)t.push(r.a.createElement("code",{key:n,title:e[n]},c(n))),t.push(" ");return t}function d({name:e,path:t,value:a}){return r.a.createElement("code",null,p(null,a))}function b({name:e,path:t,values:a}){let n="";return a.forEach((function(t){n+=p(e,t)+"\n"})),t&&(n=`[${t}]\n${n}`),r.a.createElement("div",null,r.a.createElement(o.a,{fileName:"vector.toml"}),r.a.createElement(i.a,{className:"language-toml"},n))}function f({value:e}){let t=Object.keys(e)[0],a=Object.values(e)[0];return r.a.createElement("span",null,r.a.createElement("code",null,r.a.createElement("a",{href:`#${t}`},t))," = ",r.a.createElement("code",null,c(a)))}function h({defaultValue:e,enumValues:t,examples:a,name:l,path:s,relevantWhen:o}){const[i,c]=Object(n.useState)(!1);return e||t||a&&a.length>0?r.a.createElement("div",{className:"info"},void 0!==e?e?r.a.createElement("div",null,"Default: ",r.a.createElement(d,{name:l,path:s,value:e})):r.a.createElement("div",null,"No default"):null,t?r.a.createElement("div",null,"Enum, must be one of: ",r.a.createElement(u,{values:t})):null,o?r.a.createElement("div",null,"Only relevant when: ",r.a.createElement(f,{value:o})):null,r.a.createElement("div",null,r.a.createElement("div",{className:"show-more",onClick:()=>c(!i)},i?"Hide examples":"View examples"),i&&r.a.createElement("div",{className:"examples"},r.a.createElement(b,{name:l,path:s,values:a})))):null}t.a=function({children:e,common:t,defaultValue:a,enumValues:l,examples:o,name:i,path:c,relevantWhen:m,templateable:p,type:u,unit:d,required:b}){const[f,g]=Object(n.useState)(!1);let O=e;return f&&(O=O.filter(e=>"p"!=e.props.originalType)),r.a.createElement("div",{className:s()("field","section",b?"field-required":"",f?"field-collapsed":""),required:b},r.a.createElement("div",{className:"badges"},t&&r.a.createElement("span",{className:"badge badge--primary",title:"This is a popular that we recommend for getting started"},"common"),p&&r.a.createElement("span",{className:"badge badge--primary",title:"This option is dynamic and accepts the Vector template syntax"},"templateable"),r.a.createElement("span",{className:"badge badge--secondary"},u),l&&Object.keys(l).length>0&&r.a.createElement("span",{className:"badge badge--secondary",title:"This option is an enumation and only allows specific values"},"enum"),d&&r.a.createElement("span",{className:"badge badge--secondary"},d),b?r.a.createElement("span",{className:"badge badge--danger"},"required"):r.a.createElement("span",{className:"badge badge--secondary"},"optional")),O,!f&&r.a.createElement(h,{defaultValue:a,enumValues:l,examples:o,name:i,path:c,relevantWhen:m}))}}}]);