/*! For license information please see 6e785787.6c0a5c4a.js.LICENSE */
(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{160:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return o})),a.d(t,"rightToc",(function(){return d})),a.d(t,"default",(function(){return p}));var n=a(1),l=(a(0),a(214)),r=a(222),s=a(237),i=a(238);const c={description:"The Vector `add_fields` transform accepts `log` events and allows you to add one or more log fields.",event_types:["log"],issues_url:"https://github.com/timberio/vector/issues?q=is%3Aopen+is%3Aissue+label%3A%22transform%3A+add_fields%22",sidebar_label:'add_fields|["log"]',source_url:"https://github.com/timberio/vector/tree/master/src/transforms/add_fields.rs",status:"prod-ready",title:"Add Fields Transform"},o={id:"reference/transforms/add_fields",title:"Add Fields Transform",description:"The Vector `add_fields` transform accepts `log` events and allows you to add one or more log fields.",source:"@site/docs/reference/transforms/add_fields.md",permalink:"/docs/reference/transforms/add_fields",editUrl:"https://github.com/timberio/vector/edit/master/website/docs/reference/transforms/add_fields.md",sidebar_label:'add_fields|["log"]'},d=[{value:"Configuration",id:"configuration",children:[]},{value:"Options",id:"options",children:[{value:"fields",id:"fields",children:[]}]},{value:"Output",id:"output",children:[]},{value:"How It Works",id:"how-it-works",children:[{value:"Arrays",id:"arrays",children:[]},{value:"Complex Transforming",id:"complex-transforming",children:[]},{value:"Environment Variables",id:"environment-variables",children:[]},{value:"Key Conflicts",id:"key-conflicts",children:[]},{value:"Nested Fields",id:"nested-fields",children:[]},{value:"Removing Fields",id:"removing-fields",children:[]},{value:"Special Characters",id:"special-characters",children:[]},{value:"Types",id:"types",children:[]}]}],m={rightToc:d},u="wrapper";function p({components:e,...t}){return Object(l.b)(u,Object(n.a)({},m,t,{components:e,mdxType:"MDXLayout"}),Object(l.b)("p",null,"The Vector ",Object(l.b)("inlineCode",{parentName:"p"},"add_fields")," transform accepts ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/about/data-model/log/"}),Object(l.b)("inlineCode",{parentName:"a"},"log"))," events and allows you to add one or more log fields."),Object(l.b)("h2",{id:"configuration"},"Configuration"),Object(l.b)(r.a,{fileName:"vector.toml",learnMoreUrl:"/docs/setup/configuration/",mdxType:"CodeHeader"}),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-toml"}),'[transforms.my_transform_id]\n  # REQUIRED - General\n  type = "add_fields" # must be: "add_fields"\n  inputs = ["my-source-id"] # example\n\n  # REQUIRED - Fields\n  [transforms.my_transform_id.fields]\n    string_field = "string value" # example\n    env_var_field = "${ENV_VAR}" # example\n    int_field = 1 # example\n    float_field = 1.2 # example\n    bool_field = true # example\n    timestamp_field = 1979-05-27T00:32:00Z # example\n    parent = {child = "child_value"} # example\n    list_field = ["first", "second", "third"] # example\n')),Object(l.b)("h2",{id:"options"},"Options"),Object(l.b)(s.a,{filters:!0,mdxType:"Fields"},Object(l.b)(i.a,{common:!0,defaultValue:null,enumValues:null,examples:[],name:"fields",nullable:!1,path:null,relevantWhen:null,required:!0,templateable:!1,type:"table",unit:null,mdxType:"Field"},Object(l.b)("h3",{id:"fields"},"fields"),Object(l.b)("p",null,"A table of key/value pairs representing the keys to be added to the event."),Object(l.b)(s.a,{filters:!1,mdxType:"Fields"},Object(l.b)(i.a,{common:!0,defaultValue:null,enumValues:null,examples:[{string_field:"string value"},{env_var_field:"${ENV_VAR}"},{int_field:1},{float_field:1.2},{bool_field:!0},{timestamp_field:"1979-05-27 00:32:00 -0700"},{parent:{child:"child_value"}},{list_field:["first","second","third"]}],name:"`[field-name]`",nullable:!1,path:"fields",relevantWhen:null,required:!0,templateable:!1,type:"*",unit:null,mdxType:"Field"},Object(l.b)("h4",{id:"field-name"},Object(l.b)("inlineCode",{parentName:"h4"},"[field-name]")),Object(l.b)("p",null,"The name of the field to add. Accepts all ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/setup/configuration/#types"}),"supported types"),". Use ",Object(l.b)("inlineCode",{parentName:"p"},".")," for adding nested fields."))))),Object(l.b)("h2",{id:"output"},"Output"),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"add_fields")," transform accepts ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/about/data-model/log/"}),Object(l.b)("inlineCode",{parentName:"a"},"log"))," events and allows you to add one or more log fields.\nFor example:"),Object(l.b)("p",null,"Given the following configuration:"),Object(l.b)(r.a,{fileName:"vector.toml",mdxType:"CodeHeader"}),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-toml"}),'[transforms.my_transform]\n  type = "add_fields"\n  inputs = [...]\n\n  [transforms.my_transform.fields]\n    field1 = "string value"\n    field2 = 1\n    field3 = 2.0\n    field4 = true\n    field5 = 2019-05-27T07:32:00Z\n    field6 = ["item 1", "item 2"]\n    field7.nested = "nested value",\n    field8 = "#{HOSTNAME}"\n')),Object(l.b)("p",null,"A ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/about/data-model/log/"}),Object(l.b)("inlineCode",{parentName:"a"},"log")," event")," will be output with the following structure:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),'{\n  // ... existing fields\n  "field1": "string value",\n  "field2": 1,\n  "field3": 2.0,\n  "field4": true,\n  "field5": <timestamp:2019-05-27T07:32:00Z>,\n  "field6.0": "item1",\n  "field6.1": "item2",\n  "field7.nested": "nested value",\n  "field8": "my.hostname.com"\n}\n')),Object(l.b)("p",null,"While unrealistic, this example demonstrates the various accepted\n",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/setup/configuration/#value-types"}),"types")," and how they're repsented in Vector's\ninternal ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/about/data-model/log/"}),"log structure"),"."),Object(l.b)("h2",{id:"how-it-works"},"How It Works"),Object(l.b)("h3",{id:"arrays"},"Arrays"),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"add_fields")," transform will support ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/toml-lang/toml#array"}),"TOML arrays"),". Keep in\nmind that the values must be simple type (not tables), and each value must the\nsame type. You cannot mix types:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-toml"}),'[transforms.<transform-id>]\n  # ...\n\n  [transforms.<transform-id>.fields]\n    my_array = ["first", "second", "third"]\n')),Object(l.b)("p",null,"Results in:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "my_array.0": "first",\n  "my_array.1": "second",\n  "my_array.2": "third"\n}\n')),Object(l.b)("p",null,"Learn more about how ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/about/data-model/log/"}),Object(l.b)("inlineCode",{parentName:"a"},"log")," events")," are structured."),Object(l.b)("h3",{id:"complex-transforming"},"Complex Transforming"),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"add_fields")," transform is designed for simple key additions. If you need\nmore complex transforming then we recommend using a more versatile transform\nlike the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/transforms/lua/"}),Object(l.b)("inlineCode",{parentName:"a"},"lua")," transform"),"."),Object(l.b)("h3",{id:"environment-variables"},"Environment Variables"),Object(l.b)("p",null,"Environment variables are supported through all of Vector's configuration.\nSimply add ",Object(l.b)("inlineCode",{parentName:"p"},"${MY_ENV_VAR}")," in your Vector configuration file and the variable\nwill be replaced before being evaluated."),Object(l.b)("p",null,"You can learn more in the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/setup/configuration/#environment-variables"}),"Environment Variables"),"\nsection."),Object(l.b)("h3",{id:"key-conflicts"},"Key Conflicts"),Object(l.b)("p",null,"Keys specified in this transform will replace existing keys."),Object(l.b)("h3",{id:"nested-fields"},"Nested Fields"),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"add_fields")," transform will support dotted keys or ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/toml-lang/toml#table"}),"TOML\ntables"),". We recommend the dotted key syntax since it is less\nverbose for this usecase:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{}),'[transforms.<transform-id>]\n  # ...\n\n  [transforms.<transform-id>.fields]\n    parent.child.grandchild = "my_value"\n')),Object(l.b)("p",null,"Results in:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "parent.child.grandchild": "my_value"\n}\n')),Object(l.b)("p",null,"Learn more about how ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/about/data-model/log/"}),Object(l.b)("inlineCode",{parentName:"a"},"log")," events")," are structured."),Object(l.b)("h3",{id:"removing-fields"},"Removing Fields"),Object(l.b)("p",null,"See the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/transforms/remove_fields/"}),Object(l.b)("inlineCode",{parentName:"a"},"remove_fields")," transform"),"."),Object(l.b)("h3",{id:"special-characters"},"Special Characters"),Object(l.b)("p",null,"Aside from the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/about/data-model/log/#special-characters"}),"special characters"),"\nlisted in the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/about/data-model/"}),"Data Model")," doc, Vector does not restrict the\ncharacters allowed in keys. You can wrap key names in ",Object(l.b)("inlineCode",{parentName:"p"},'" "')," quote to preserve\nspaces and use ",Object(l.b)("inlineCode",{parentName:"p"},"\\")," to escape quotes."),Object(l.b)("h3",{id:"types"},"Types"),Object(l.b)("p",null,"All supported ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/setup/configuration/#value-types"}),"configuration value types")," are accepted.\nThis includes primitivate types (",Object(l.b)("inlineCode",{parentName:"p"},"string"),", ",Object(l.b)("inlineCode",{parentName:"p"},"int"),", ",Object(l.b)("inlineCode",{parentName:"p"},"float"),", ",Object(l.b)("inlineCode",{parentName:"p"},"boolean"),") and\nspecial types, such as ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#arrays"}),"arrays")," and ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#nested-fields"}),"nested fields"),"."))}p.isMDXComponent=!0},213:function(e,t,a){var n;!function(){"use strict";var a={}.hasOwnProperty;function l(){for(var e=[],t=0;t<arguments.length;t++){var n=arguments[t];if(n){var r=typeof n;if("string"===r||"number"===r)e.push(n);else if(Array.isArray(n)&&n.length){var s=l.apply(null,n);s&&e.push(s)}else if("object"===r)for(var i in n)a.call(n,i)&&n[i]&&e.push(i)}}return e.join(" ")}e.exports?(l.default=l,e.exports=l):void 0===(n=function(){return l}.apply(t,[]))||(e.exports=n)}()},222:function(e,t,a){"use strict";var n=a(0),l=a.n(n);a(86);t.a=function({fileName:e,links:t}){let a=[];for(var n in t)a.push(l.a.createElement("a",{href:n.href},n.text||"Learn more&hellip;"));return l.a.createElement("div",{className:"code-header"},a.length>0&&l.a.createElement("span",{className:"code-header--links"},a),e)}},224:function(e,t,a){"use strict";(function(e){var n=a(1),l=a(0),r=a.n(l),s=a(252),i=a(243),c=a.n(i),o=a(236),d=a(213),m=a.n(d),u=a(250),p=a.n(u),b=a(244),f=a.n(b),h=a(216),O=a(87),j=a.n(O),g=a(221);(void 0!==e?e:window).Prism=o.a,a(245),a(246),a(247),a(248),a(249);const v=/{([\d,-]+)}/;t.a=({children:e,className:t,metastring:a})=>{const{siteConfig:{themeConfig:{prism:i={}}}}=Object(h.a)(),[o,d]=Object(l.useState)(!1),u=Object(l.useRef)(null),b=Object(l.useRef)(null),[O]=Object(g.a)();let y=[];if(a&&v.test(a)){const e=a.match(v)[1];y=f.a.parse(e).filter(e=>e>0)}Object(l.useEffect)(()=>{let e;return b.current&&(e=new c.a(b.current,{target:()=>u.current})),()=>{e&&e.destroy()}},[b.current,u.current]);let N=t&&t.replace(/language-/,"");!N&&i.defaultLanguage&&(N=i.defaultLanguage);const E=()=>{window.getSelection().empty(),d(!0),setTimeout(()=>d(!1),2e3)};let _="dark"==O?i.darkTheme:i.theme;return r.a.createElement(s.a,Object(n.a)({},s.b,{theme:_||p.a,code:e.trim(),language:N}),({className:e,style:t,tokens:a,getLineProps:l,getTokenProps:s})=>r.a.createElement("div",{className:j.a.codeBlockWrapper},r.a.createElement("pre",{ref:u,className:m()(e,j.a.codeBlock),style:t},a.map((e,t)=>{const a=l({line:e,key:t});return y.includes(t+1)&&(a.className=`${a.className} docusaurus-highlight-code-line`),r.a.createElement("div",Object(n.a)({key:t},a),e.map((e,t)=>r.a.createElement("span",Object(n.a)({key:t},s({token:e,key:t})))))})),r.a.createElement("button",{ref:b,type:"button","aria-label":"Copy code to clipboard",className:j.a.copyButton,onClick:E},o?"Copied":"Copy")))}}).call(this,a(48))},237:function(e,t,a){"use strict";var n=a(0),l=a.n(n);a(92);t.a=function({children:e,filters:t}){const[a,r]=Object(n.useState)(!1),[s,i]=Object(n.useState)(!1),[c,o]=Object(n.useState)(null);let d=Array.isArray(e)?e:[e],m=d.some(e=>e.props.common),u=d.some(e=>e.props.required),p=d;return a&&(p=p.filter(e=>e.props.common)),s&&(p=p.filter(e=>e.props.required)),c&&(p=p.filter(e=>e.props.name.toLowerCase().includes(c.toLowerCase()))),l.a.createElement("div",{className:"fields"},d.length>1&&!1!==t?l.a.createElement("div",{className:"filters"},l.a.createElement("span",{className:"result-count"},p.length," items"),l.a.createElement("div",{className:" search"},l.a.createElement("input",{type:"text",onChange:e=>o(e.currentTarget.value),placeholder:"\ud83d\udd0d Search..."})),l.a.createElement("div",{className:"checkboxes"},m&&l.a.createElement("label",{title:"Only show popular/common results"},l.a.createElement("input",{type:"checkbox",onChange:e=>r(e.currentTarget.checked),checked:a}),"common only"),u&&l.a.createElement("label",{title:"Only show required results"},l.a.createElement("input",{type:"checkbox",onChange:e=>i(e.currentTarget.checked),checked:s}),"required only"))):null,l.a.createElement("div",{className:"section-list"},!Array.isArray(p)||p.length>0?p:l.a.createElement("div",{className:"empty"},l.a.createElement("div",{className:"icon"},"\u2639"),l.a.createElement("div",null,"No fields found"))))}},238:function(e,t,a){"use strict";a(234);var n=a(0),l=a.n(n),r=a(213),s=a.n(r),i=(a(239),a(222)),c=a(224);function o(e){return JSON.stringify(e)}function d(e){return e.includes(".")?'"'+e+'"':e}function m(e,t){return(a=t)&&a.constructor===Object?"name"in t&&"value"in t?`${d(t.name)} = ${o(t.value)}`:`${d(Object.keys(t)[0])} = ${o(Object.values(t)[0])}`:e?`${e} = ${o(t)}`:`${o(t)}`;var a}function u({values:e}){let t=[];if(Array.isArray(e))for(var a in e){let n=e[a];t.push(l.a.createElement("code",{key:n},o(n))),t.push(" ")}else for(var n in e)t.push(l.a.createElement("code",{key:n,title:e[n]},o(n))),t.push(" ");return t}function p({name:e,path:t,value:a}){return l.a.createElement("code",null,m(null,a))}function b({name:e,path:t,values:a}){let n="";return a.forEach((function(t){n+=m(e,t)+"\n"})),t&&(n=`[${t}]\n${n}`),l.a.createElement("div",null,l.a.createElement(i.a,{fileName:"vector.toml"}),l.a.createElement(c.a,{className:"language-toml"},n))}function f({value:e}){let t=Object.keys(e)[0],a=Object.values(e)[0];return l.a.createElement("span",null,l.a.createElement("code",null,l.a.createElement("a",{href:`#${t}`},t))," = ",l.a.createElement("code",null,o(a)))}function h({defaultValue:e,enumValues:t,examples:a,name:r,path:s,relevantWhen:i}){const[c,o]=Object(n.useState)(!1);return e||t||a&&a.length>0?l.a.createElement("div",{className:"info"},void 0!==e?e?l.a.createElement("div",null,"Default: ",l.a.createElement(p,{name:r,path:s,value:e})):l.a.createElement("div",null,"No default"):null,t?l.a.createElement("div",null,"Enum, must be one of: ",l.a.createElement(u,{values:t})):null,i?l.a.createElement("div",null,"Only relevant when: ",l.a.createElement(f,{value:i})):null,l.a.createElement("div",null,l.a.createElement("div",{className:"show-more",onClick:()=>o(!c)},c?"Hide examples":"View examples"),c&&l.a.createElement("div",{className:"examples"},l.a.createElement(b,{name:r,path:s,values:a})))):null}t.a=function({children:e,common:t,defaultValue:a,enumValues:r,examples:i,name:c,path:o,relevantWhen:d,templateable:m,type:u,unit:p,required:b}){const[f,O]=Object(n.useState)(!1);let j=e;return f&&(j=j.filter(e=>"p"!=e.props.originalType)),l.a.createElement("div",{className:s()("field","section",b?"field-required":"",f?"field-collapsed":""),required:b},l.a.createElement("div",{className:"badges"},t&&l.a.createElement("span",{className:"badge badge--primary",title:"This is a popular that we recommend for getting started"},"common"),m&&l.a.createElement("span",{className:"badge badge--primary",title:"This option is dynamic and accepts the Vector template syntax"},"templateable"),l.a.createElement("span",{className:"badge badge--secondary"},u),r&&Object.keys(r).length>0&&l.a.createElement("span",{className:"badge badge--secondary",title:"This option is an enumation and only allows specific values"},"enum"),p&&l.a.createElement("span",{className:"badge badge--secondary"},p),b?l.a.createElement("span",{className:"badge badge--danger"},"required"):l.a.createElement("span",{className:"badge badge--secondary"},"optional")),j,!f&&l.a.createElement(h,{defaultValue:a,enumValues:r,examples:i,name:c,path:o,relevantWhen:d}))}}}]);