(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{123:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return p})),a.d(t,"rightToc",(function(){return i})),a.d(t,"default",(function(){return s}));var n=a(1),r=a(6),c=(a(0),a(205)),o={},p={id:"reference/clients/python/docs/IntegrationsApi",title:"IntegrationsApi",description:"# brainrex.IntegrationsApi",source:"@site/docs/reference/clients/python/docs/IntegrationsApi.md",permalink:"/docs/reference/clients/python/docs/IntegrationsApi",editUrl:"https://github.com/brainrexapi/brainrexapi.github.io/edit/master/docs/reference/clients/python/docs/IntegrationsApi.md"},i=[{value:"Example",id:"example",children:[]},{value:"Parameters",id:"parameters",children:[]},{value:"Return type",id:"return-type",children:[]},{value:"Authorization",id:"authorization",children:[]},{value:"HTTP request headers",id:"http-request-headers",children:[]},{value:"Example",id:"example-1",children:[]},{value:"Parameters",id:"parameters-1",children:[]},{value:"Return type",id:"return-type-1",children:[]},{value:"Authorization",id:"authorization-1",children:[]},{value:"HTTP request headers",id:"http-request-headers-1",children:[]},{value:"Example",id:"example-2",children:[]},{value:"Parameters",id:"parameters-2",children:[]},{value:"Return type",id:"return-type-2",children:[]},{value:"Authorization",id:"authorization-2",children:[]},{value:"HTTP request headers",id:"http-request-headers-2",children:[]},{value:"Example",id:"example-3",children:[]},{value:"Parameters",id:"parameters-3",children:[]},{value:"Return type",id:"return-type-3",children:[]},{value:"Authorization",id:"authorization-3",children:[]},{value:"HTTP request headers",id:"http-request-headers-3",children:[]},{value:"Example",id:"example-4",children:[]},{value:"Parameters",id:"parameters-4",children:[]},{value:"Return type",id:"return-type-4",children:[]},{value:"Authorization",id:"authorization-4",children:[]},{value:"HTTP request headers",id:"http-request-headers-4",children:[]}],b={rightToc:i},l="wrapper";function s(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(c.b)(l,Object(n.a)({},b,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h1",{id:"brainrexintegrationsapi"},"brainrex.IntegrationsApi"),Object(c.b)("p",null,"All URIs are relative to ",Object(c.b)("em",{parentName:"p"},Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"https://api.bitlongs.com"}),"https://api.bitlongs.com"))),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Method"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"HTTP request"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/reference/clients/python/docs/IntegrationsApi#crypto_get_candle_data"}),Object(c.b)("strong",{parentName:"a"},"crypto_get_candle_data"))),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("strong",{parentName:"td"},"POST")," /crypto/get_candles"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Downloads candle format market data")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/reference/clients/python/docs/IntegrationsApi#crypto_get_exchange_assets"}),Object(c.b)("strong",{parentName:"a"},"crypto_get_exchange_assets"))),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("strong",{parentName:"td"},"POST")," /crypto/get_exchange_assets"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Gets all currency pairs traded in selected exchange")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/reference/clients/python/docs/IntegrationsApi#crypto_get_orderbooks"}),Object(c.b)("strong",{parentName:"a"},"crypto_get_orderbooks"))),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("strong",{parentName:"td"},"POST")," /crypto/get_orderbooks"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Downloads candle format market data")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/reference/clients/python/docs/IntegrationsApi#crypto_get_supported_exchanges"}),Object(c.b)("strong",{parentName:"a"},"crypto_get_supported_exchanges"))),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("strong",{parentName:"td"},"GET")," /crypto/get_supported_exchanges"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Gets all cryptocurrency exchanges supported by the Brainrex API")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/reference/clients/python/docs/IntegrationsApi#crypto_get_ticker"}),Object(c.b)("strong",{parentName:"a"},"crypto_get_ticker"))),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("strong",{parentName:"td"},"POST")," /crypto/get_ticker"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Downloads candle format market data")))),Object(c.b)("h1",{id:"crypto_get_candle_data"},Object(c.b)("strong",{parentName:"h1"},"crypto_get_candle_data")),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"CandleResponse crypto_get_candle_data(candle_request)")),Object(c.b)("p",null,"Downloads candle format market data"),Object(c.b)("p",null,"Returns a list of candle data from specified market and data range"),Object(c.b)("h3",{id:"example"},"Example"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"from __future__ import print_function\nimport time\nimport brainrex\nfrom brainrex.rest import ApiException\nfrom pprint import pprint\n\n# Configure API key authorization: APIKeyHeader\nconfiguration = brainrex.Configuration()\nconfiguration.api_key['x-api-key'] = 'YOUR_API_KEY'\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['x-api-key'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = brainrex.IntegrationsApi(brainrex.ApiClient(configuration))\ncandle_request = brainrex.CandleRequest() # CandleRequest | The Get candles end point return market data in Open High Close Volume format. In order to use this endpoint you need to enter your API keys to your data provider in the console\n\ntry:\n    # Downloads candle format market data\n    api_response = api_instance.crypto_get_candle_data(candle_request)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->crypto_get_candle_data: %s\\n\" % e)\n")),Object(c.b)("h3",{id:"parameters"},"Parameters"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Notes"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("strong",{parentName:"td"},"candle_request")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/reference/clients/python/docs/CandleRequest"}),Object(c.b)("strong",{parentName:"a"},"CandleRequest"))),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The Get candles end point return market data in Open High Close Volume format. In order to use this endpoint you need to enter your API keys to your data provider in the console"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}))))),Object(c.b)("h3",{id:"return-type"},"Return type"),Object(c.b)("p",null,Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/clients/python/docs/CandleResponse"}),Object(c.b)("strong",{parentName:"a"},"CandleResponse"))),Object(c.b)("h3",{id:"authorization"},"Authorization"),Object(c.b)("p",null,Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/clients/python/README#APIKeyHeader"}),"APIKeyHeader")),Object(c.b)("h3",{id:"http-request-headers"},"HTTP request headers"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"Content-Type"),": application/json"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"Accept"),": application/json")),Object(c.b)("p",null,Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#"}),"[Back to top]")," ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/clients/python/README#documentation-for-api-endpoints"}),"[Back to API list]")," ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/clients/python/README#documentation-for-models"}),"[Back to Model list]")," ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/clients/python/README"}),"[Back to README]")),Object(c.b)("h1",{id:"crypto_get_exchange_assets"},Object(c.b)("strong",{parentName:"h1"},"crypto_get_exchange_assets")),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"ExchangeAssetsResponse crypto_get_exchange_assets(exchange)")),Object(c.b)("p",null,"Gets all currency pairs traded in selected exchange"),Object(c.b)("p",null,"Returns a list of candle data from specified market and data range"),Object(c.b)("h3",{id:"example-1"},"Example"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"from __future__ import print_function\nimport time\nimport brainrex\nfrom brainrex.rest import ApiException\nfrom pprint import pprint\n\n# Configure API key authorization: APIKeyHeader\nconfiguration = brainrex.Configuration()\nconfiguration.api_key['x-api-key'] = 'YOUR_API_KEY'\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['x-api-key'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = brainrex.IntegrationsApi(brainrex.ApiClient(configuration))\nexchange = brainrex.Exchange() # Exchange | Name of the cryptocurrency exchange\n\ntry:\n    # Gets all currency pairs traded in selected exchange\n    api_response = api_instance.crypto_get_exchange_assets(exchange)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->crypto_get_exchange_assets: %s\\n\" % e)\n")),Object(c.b)("h3",{id:"parameters-1"},"Parameters"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Notes"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("strong",{parentName:"td"},"exchange")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/reference/clients/python/docs/Exchange"}),Object(c.b)("strong",{parentName:"a"},"Exchange"))),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Name of the cryptocurrency exchange"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}))))),Object(c.b)("h3",{id:"return-type-1"},"Return type"),Object(c.b)("p",null,Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/clients/python/docs/ExchangeAssetsResponse"}),Object(c.b)("strong",{parentName:"a"},"ExchangeAssetsResponse"))),Object(c.b)("h3",{id:"authorization-1"},"Authorization"),Object(c.b)("p",null,Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/clients/python/README#APIKeyHeader"}),"APIKeyHeader")),Object(c.b)("h3",{id:"http-request-headers-1"},"HTTP request headers"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"Content-Type"),": application/json"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"Accept"),": application/json")),Object(c.b)("p",null,Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#"}),"[Back to top]")," ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/clients/python/README#documentation-for-api-endpoints"}),"[Back to API list]")," ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/clients/python/README#documentation-for-models"}),"[Back to Model list]")," ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/clients/python/README"}),"[Back to README]")),Object(c.b)("h1",{id:"crypto_get_orderbooks"},Object(c.b)("strong",{parentName:"h1"},"crypto_get_orderbooks")),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"OrderbookResponse crypto_get_orderbooks(orderbook_request)")),Object(c.b)("p",null,"Downloads candle format market data"),Object(c.b)("p",null,"Returns a list of candle data from specified market and data range"),Object(c.b)("h3",{id:"example-2"},"Example"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"from __future__ import print_function\nimport time\nimport brainrex\nfrom brainrex.rest import ApiException\nfrom pprint import pprint\n\n# Configure API key authorization: APIKeyHeader\nconfiguration = brainrex.Configuration()\nconfiguration.api_key['x-api-key'] = 'YOUR_API_KEY'\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['x-api-key'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = brainrex.IntegrationsApi(brainrex.ApiClient(configuration))\norderbook_request = brainrex.OrderbookRequest() # OrderbookRequest | Exchange, trading pair and date rage for data\n\ntry:\n    # Downloads candle format market data\n    api_response = api_instance.crypto_get_orderbooks(orderbook_request)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->crypto_get_orderbooks: %s\\n\" % e)\n")),Object(c.b)("h3",{id:"parameters-2"},"Parameters"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Notes"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("strong",{parentName:"td"},"orderbook_request")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/reference/clients/python/docs/OrderbookRequest"}),Object(c.b)("strong",{parentName:"a"},"OrderbookRequest"))),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Exchange, trading pair and date rage for data"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}))))),Object(c.b)("h3",{id:"return-type-2"},"Return type"),Object(c.b)("p",null,Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/clients/python/docs/OrderbookResponse"}),Object(c.b)("strong",{parentName:"a"},"OrderbookResponse"))),Object(c.b)("h3",{id:"authorization-2"},"Authorization"),Object(c.b)("p",null,Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/clients/python/README#APIKeyHeader"}),"APIKeyHeader")),Object(c.b)("h3",{id:"http-request-headers-2"},"HTTP request headers"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"Content-Type"),": application/json"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"Accept"),": application/json")),Object(c.b)("p",null,Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#"}),"[Back to top]")," ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/clients/python/README#documentation-for-api-endpoints"}),"[Back to API list]")," ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/clients/python/README#documentation-for-models"}),"[Back to Model list]")," ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/clients/python/README"}),"[Back to README]")),Object(c.b)("h1",{id:"crypto_get_supported_exchanges"},Object(c.b)("strong",{parentName:"h1"},"crypto_get_supported_exchanges")),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"SupportedExchanges crypto_get_supported_exchanges()")),Object(c.b)("p",null,"Gets all cryptocurrency exchanges supported by the Brainrex API"),Object(c.b)("p",null,"Returns a list of candle data from specified market and data range"),Object(c.b)("h3",{id:"example-3"},"Example"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"from __future__ import print_function\nimport time\nimport brainrex\nfrom brainrex.rest import ApiException\nfrom pprint import pprint\n\n# Configure API key authorization: APIKeyHeader\nconfiguration = brainrex.Configuration()\nconfiguration.api_key['x-api-key'] = 'YOUR_API_KEY'\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['x-api-key'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = brainrex.IntegrationsApi(brainrex.ApiClient(configuration))\n\ntry:\n    # Gets all cryptocurrency exchanges supported by the Brainrex API\n    api_response = api_instance.crypto_get_supported_exchanges()\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->crypto_get_supported_exchanges: %s\\n\" % e)\n")),Object(c.b)("h3",{id:"parameters-3"},"Parameters"),Object(c.b)("p",null,"This endpoint does not need any parameter."),Object(c.b)("h3",{id:"return-type-3"},"Return type"),Object(c.b)("p",null,Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/clients/python/docs/SupportedExchanges"}),Object(c.b)("strong",{parentName:"a"},"SupportedExchanges"))),Object(c.b)("h3",{id:"authorization-3"},"Authorization"),Object(c.b)("p",null,Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/clients/python/README#APIKeyHeader"}),"APIKeyHeader")),Object(c.b)("h3",{id:"http-request-headers-3"},"HTTP request headers"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"Content-Type"),": application/json"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"Accept"),": application/json")),Object(c.b)("p",null,Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#"}),"[Back to top]")," ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/clients/python/README#documentation-for-api-endpoints"}),"[Back to API list]")," ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/clients/python/README#documentation-for-models"}),"[Back to Model list]")," ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/clients/python/README"}),"[Back to README]")),Object(c.b)("h1",{id:"crypto_get_ticker"},Object(c.b)("strong",{parentName:"h1"},"crypto_get_ticker")),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"TickerResponse crypto_get_ticker(exchange)")),Object(c.b)("p",null,"Downloads candle format market data"),Object(c.b)("p",null,"Returns a list of candle data from specified market and data range"),Object(c.b)("h3",{id:"example-4"},"Example"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-python"}),"from __future__ import print_function\nimport time\nimport brainrex\nfrom brainrex.rest import ApiException\nfrom pprint import pprint\n\n# Configure API key authorization: APIKeyHeader\nconfiguration = brainrex.Configuration()\nconfiguration.api_key['x-api-key'] = 'YOUR_API_KEY'\n# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed\n# configuration.api_key_prefix['x-api-key'] = 'Bearer'\n\n# create an instance of the API class\napi_instance = brainrex.IntegrationsApi(brainrex.ApiClient(configuration))\nexchange = brainrex.Exchange() # Exchange | Get ticker data from specified crypto exchange\n\ntry:\n    # Downloads candle format market data\n    api_response = api_instance.crypto_get_ticker(exchange)\n    pprint(api_response)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->crypto_get_ticker: %s\\n\" % e)\n")),Object(c.b)("h3",{id:"parameters-4"},"Parameters"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Notes"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("strong",{parentName:"td"},"exchange")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/reference/clients/python/docs/Exchange"}),Object(c.b)("strong",{parentName:"a"},"Exchange"))),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Get ticker data from specified crypto exchange"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}))))),Object(c.b)("h3",{id:"return-type-4"},"Return type"),Object(c.b)("p",null,Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/clients/python/docs/TickerResponse"}),Object(c.b)("strong",{parentName:"a"},"TickerResponse"))),Object(c.b)("h3",{id:"authorization-4"},"Authorization"),Object(c.b)("p",null,Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/clients/python/README#APIKeyHeader"}),"APIKeyHeader")),Object(c.b)("h3",{id:"http-request-headers-4"},"HTTP request headers"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"Content-Type"),": application/json"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"Accept"),": application/json")),Object(c.b)("p",null,Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#"}),"[Back to top]")," ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/clients/python/README#documentation-for-api-endpoints"}),"[Back to API list]")," ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/clients/python/README#documentation-for-models"}),"[Back to Model list]")," ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/clients/python/README"}),"[Back to README]")))}s.isMDXComponent=!0},205:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return j}));var n=a(0),r=a.n(n);function c(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){c(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},c=Object.keys(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var b=r.a.createContext({}),l=function(e){var t=r.a.useContext(b),a=t;return e&&(a="function"==typeof e?e(t):p({},t,{},e)),a},s=function(e){var t=l(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},O=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,c=e.originalType,o=e.parentName,b=i(e,["components","mdxType","originalType","parentName"]),s=l(a),d=n,O=s["".concat(o,".").concat(d)]||s[d]||u[d]||c;return a?r.a.createElement(O,p({ref:t},b,{components:a})):r.a.createElement(O,p({ref:t},b))}));function j(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=a.length,o=new Array(c);o[0]=O;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p[d]="string"==typeof e?e:n,o[1]=p;for(var b=2;b<c;b++)o[b]=a[b];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,a)}O.displayName="MDXCreateElement"}}]);