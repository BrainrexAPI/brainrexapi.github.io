(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{121:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return u}));var r=n(1),a=n(6),i=(n(0),n(205)),o={title:"Extracting Crypto Exchange DATA",sidebar_label:"Extracting Exchange Data",description:"In Depth tutorial of how to extract crypto data in different formats from hundreds of exchanges."},c={id:"tutorials/extracting-exchange-data",title:"Extracting Crypto Exchange DATA",description:"In Depth tutorial of how to extract crypto data in different formats from hundreds of exchanges.",source:"@site/docs/tutorials/extracting-exchange-data.md",permalink:"/docs/tutorials/extracting-exchange-data",editUrl:"https://github.com/brainrexapi/brainrexapi.github.io/edit/master/docs/tutorials/extracting-exchange-data.md",sidebar_label:"Extracting Exchange Data",sidebar:"docs",previous:{title:"Anomaly Detection Tutorial",permalink:"/docs/tutorials/analyzing-anomalies"},next:{title:"Reference",permalink:"/docs/reference"}},l=[{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Importing the libraries needed to run this tutorial",id:"importing-the-libraries-needed-to-run-this-tutorial",children:[]},{value:"If you are running this tutorial in colab or haven't installed the brainrex python library yet. Run the cell bellow.",id:"if-you-are-running-this-tutorial-in-colab-or-havent-installed-the-brainrex-python-library-yet-run-the-cell-bellow",children:[]},{value:"Copy and paste the API key from console.brainrex.com/dashboard.",id:"copy-and-paste-the-api-key-from-consolebrainrexcomdashboard",children:[]},{value:"Let's instanciate the IngetrationsApi Instance.",id:"lets-instanciate-the-ingetrationsapi-instance",children:[]}],p={rightToc:l},s="wrapper";function u(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)(s,Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"prerequisites"},"Prerequisites"),Object(i.b)("p",null,"In order to run this tutorial you need to do the following:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"You've installed the Brainrex Language Client for Python"),Object(i.b)("li",{parentName:"ul"},"You have signed up for the Brainrex Free tier."),Object(i.b)("li",{parentName:"ul"},"You have created API keys "),Object(i.b)("li",{parentName:"ul"},"Store API keys as enviroment variables."),Object(i.b)("li",{parentName:"ul"},"Basic familiarity with Python programming."),Object(i.b)("li",{parentName:"ul"},"Set up your Python development environment. It is recommended that you have the latest version of Python 3.8.0, pip, and -virtualenv installed on your system.")),Object(i.b)("h2",{id:"importing-the-libraries-needed-to-run-this-tutorial"},"Importing the libraries needed to run this tutorial"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"%matplotlib inline\nimport matplotlib.pyplot as plt\nfrom __future__ import print_function\nimport time\nfrom pprint import pprint\nimport pandas as pd\n")),Object(i.b)("h2",{id:"if-you-are-running-this-tutorial-in-colab-or-havent-installed-the-brainrex-python-library-yet-run-the-cell-bellow"},"If you are running this tutorial in colab or haven't installed the brainrex python library yet. Run the cell bellow."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"!pip install --user brainrex\n")),Object(i.b)("h1",{id:"import-the-brainrex-python-client"},"Import the brainrex python client"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"import brainrex\nfrom brainrex.rest import ApiException\n")),Object(i.b)("h2",{id:"copy-and-paste-the-api-key-from-consolebrainrexcomdashboard"},"Copy and paste the API key from console.brainrex.com/dashboard."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Make sure you have subscribed to the Integrations service in console.brainrex.com/apis > Click Subscribe")),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"# Configure API key authorization. To get API keys email hello@brainrex.com\nconfiguration = brainrex.Configuration()\nconfiguration.api_key['x-api-key'] = 'INSERT_YOUR_API_KEY_HERE'\n")),Object(i.b)("h2",{id:"lets-instanciate-the-ingetrationsapi-instance"},"Let's instanciate the IngetrationsApi Instance."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"integrations_instance = brainrex.IntegrationsApi(brainrex.ApiClient(configuration))\n\n# Inizitialize The CandleRequest object full documentation \ntext = brainrex.CandleRequest(base_trading_symbol='BTC', exchange='coinbasepro', interval='1d', quote_trading_symbol='USD') # CandleRequest | Exchange, trading pair and date rage for data\ntry:\n    # Downloads candle format market data\n    api_response = integrations_instance.crypto_get_candle_data(text)\nexcept ApiException as e:\n    print(\"Exception when calling IntegrationsApi->crypto_get_candle_data: %s\\n\" % e)\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"candle_dataframe = pd.DataFrame(api_response)\ncandle_dataframe.head()\n")),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"candle_dataframe.plot()\n")),Object(i.b)("p",null,Object(i.b)("img",Object(r.a)({parentName:"p"},{src:"integrations-quickstart_files/integrations-quickstart_12_1.png",alt:"png"}))),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"")))}u.isMDXComponent=!0},205:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),s=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c({},t,{},e)),n},u=function(e){var t=s(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},b="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},h=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(n),b=r,h=u["".concat(o,".").concat(b)]||u[b]||d[b]||i;return n?a.a.createElement(h,c({ref:t},p,{components:n})):a.a.createElement(h,c({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=h;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[b]="string"==typeof e?e:r,o[1]=c;for(var p=2;p<i;p++)o[p]=n[p];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}h.displayName="MDXCreateElement"}}]);