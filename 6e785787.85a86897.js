/*! For license information please see 6e785787.85a86897.js.LICENSE */
(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{128:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return d})),a.d(t,"rightToc",(function(){return m})),a.d(t,"default",(function(){return b}));var n=a(1),r=a(6),l=(a(0),a(173)),i=a(207),s=a(219),c=a(220),o={description:"The Vector `add_fields` transform accepts `log` events and allows you to add one or more log fields.",event_types:["log"],issues_url:"https://github.com/timberio/vector/issues?q=is%3Aopen+is%3Aissue+label%3A%22transform%3A+add_fields%22",sidebar_label:'add_fields|["log"]',source_url:"https://github.com/timberio/vector/tree/master/src/transforms/add_fields.rs",status:"prod-ready",title:"Add Fields Transform"},d={id:"reference/transforms/add_fields",title:"Add Fields Transform",description:"The Vector `add_fields` transform accepts `log` events and allows you to add one or more log fields.",source:"@site/docs/reference/transforms/add_fields.md",permalink:"/docs/reference/transforms/add_fields",editUrl:"https://github.com/codabl.github.io/edit/master/docs/reference/transforms/add_fields.md",sidebar_label:'add_fields|["log"]'},m=[{value:"Configuration",id:"configuration",children:[]},{value:"Options",id:"options",children:[{value:"fields",id:"fields",children:[]}]},{value:"Output",id:"output",children:[]},{value:"How It Works",id:"how-it-works",children:[{value:"Arrays",id:"arrays",children:[]},{value:"Complex Transforming",id:"complex-transforming",children:[]},{value:"Environment Variables",id:"environment-variables",children:[]},{value:"Key Conflicts",id:"key-conflicts",children:[]},{value:"Nested Fields",id:"nested-fields",children:[]},{value:"Removing Fields",id:"removing-fields",children:[]},{value:"Special Characters",id:"special-characters",children:[]},{value:"Types",id:"types",children:[]}]}],u={rightToc:m},p="wrapper";function b(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(l.b)(p,Object(n.a)({},u,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"The Vector ",Object(l.b)("inlineCode",{parentName:"p"},"add_fields")," transform accepts ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/about/data-model/log/"}),Object(l.b)("inlineCode",{parentName:"a"},"log"))," events and allows you to add one or more log fields."),Object(l.b)("h2",{id:"configuration"},"Configuration"),Object(l.b)(i.a,{fileName:"vector.toml",learnMoreUrl:"/docs/setup/configuration/",mdxType:"CodeHeader"}),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-toml"}),'[transforms.my_transform_id]\n  # REQUIRED - General\n  type = "add_fields" # must be: "add_fields"\n  inputs = ["my-source-id"] # example\n\n  # REQUIRED - Fields\n  [transforms.my_transform_id.fields]\n    string_field = "string value" # example\n    env_var_field = "${ENV_VAR}" # example\n    int_field = 1 # example\n    float_field = 1.2 # example\n    bool_field = true # example\n    timestamp_field = 1979-05-27T00:32:00Z # example\n    parent = {child = "child_value"} # example\n    list_field = ["first", "second", "third"] # example\n')),Object(l.b)("h2",{id:"options"},"Options"),Object(l.b)(s.a,{filters:!0,mdxType:"Fields"},Object(l.b)(c.a,{common:!0,defaultValue:null,enumValues:null,examples:[],name:"fields",path:null,relevantWhen:null,required:!0,templateable:!1,type:"table",unit:null,mdxType:"Field"},Object(l.b)("h3",{id:"fields"},"fields"),Object(l.b)("p",null,"A table of key/value pairs representing the keys to be added to the event."),Object(l.b)(s.a,{filters:!1,mdxType:"Fields"},Object(l.b)(c.a,{common:!0,defaultValue:null,enumValues:null,examples:[{string_field:"string value"},{env_var_field:"${ENV_VAR}"},{int_field:1},{float_field:1.2},{bool_field:!0},{timestamp_field:"1979-05-27 00:32:00 -0700"},{parent:{child:"child_value"}},{list_field:["first","second","third"]}],name:"`[field-name]`",path:"fields",relevantWhen:null,required:!0,templateable:!1,type:"*",unit:null,mdxType:"Field"},Object(l.b)("h4",{id:"field-name"},Object(l.b)("inlineCode",{parentName:"h4"},"[field-name]")),Object(l.b)("p",null,"The name of the field to add. Accepts all ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/setup/configuration/#types"}),"supported types"),". Use ",Object(l.b)("inlineCode",{parentName:"p"},".")," for adding nested fields."))))),Object(l.b)("h2",{id:"output"},"Output"),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"add_fields")," transform accepts ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/about/data-model/log/"}),Object(l.b)("inlineCode",{parentName:"a"},"log"))," events and allows you to add one or more log fields.\nFor example:"),Object(l.b)("p",null,"Given the following configuration:"),Object(l.b)(i.a,{fileName:"vector.toml",mdxType:"CodeHeader"}),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-toml"}),'[transforms.my_transform]\n  type = "add_fields"\n  inputs = [...]\n\n  [transforms.my_transform.fields]\n    field1 = "string value"\n    field2 = 1\n    field3 = 2.0\n    field4 = true\n    field5 = 2019-05-27T07:32:00Z\n    field6 = ["item 1", "item 2"]\n    field7.nested = "nested value",\n    field8 = "#{HOSTNAME}"\n')),Object(l.b)("p",null,"A ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/about/data-model/log/"}),Object(l.b)("inlineCode",{parentName:"a"},"log")," event")," will be output with the following structure:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),'{\n  // ... existing fields\n  "field1": "string value",\n  "field2": 1,\n  "field3": 2.0,\n  "field4": true,\n  "field5": <timestamp:2019-05-27T07:32:00Z>,\n  "field6.0": "item1",\n  "field6.1": "item2",\n  "field7.nested": "nested value",\n  "field8": "my.hostname.com"\n}\n')),Object(l.b)("p",null,"While unrealistic, this example demonstrates the various accepted\n",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/setup/configuration/#value-types"}),"types")," and how they're repsented in Vector's\ninternal ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/about/data-model/log/"}),"log structure"),"."),Object(l.b)("h2",{id:"how-it-works"},"How It Works"),Object(l.b)("h3",{id:"arrays"},"Arrays"),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"add_fields")," transform will support ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/toml-lang/toml#array"}),"TOML arrays"),". Keep in\nmind that the values must be simple type (not tables), and each value must the\nsame type. You cannot mix types:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-toml"}),'[transforms.<transform-id>]\n  # ...\n\n  [transforms.<transform-id>.fields]\n    my_array = ["first", "second", "third"]\n')),Object(l.b)("p",null,"Results in:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "my_array.0": "first",\n  "my_array.1": "second",\n  "my_array.2": "third"\n}\n')),Object(l.b)("p",null,"Learn more about how ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/about/data-model/log/"}),Object(l.b)("inlineCode",{parentName:"a"},"log")," events")," are structured."),Object(l.b)("h3",{id:"complex-transforming"},"Complex Transforming"),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"add_fields")," transform is designed for simple key additions. If you need\nmore complex transforming then we recommend using a more versatile transform\nlike the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/transforms/lua/"}),Object(l.b)("inlineCode",{parentName:"a"},"lua")," transform"),"."),Object(l.b)("h3",{id:"environment-variables"},"Environment Variables"),Object(l.b)("p",null,"Environment variables are supported through all of Vector's configuration.\nSimply add ",Object(l.b)("inlineCode",{parentName:"p"},"${MY_ENV_VAR}")," in your Vector configuration file and the variable\nwill be replaced before being evaluated."),Object(l.b)("p",null,"You can learn more in the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/setup/configuration/#environment-variables"}),"Environment Variables"),"\nsection."),Object(l.b)("h3",{id:"key-conflicts"},"Key Conflicts"),Object(l.b)("p",null,"Keys specified in this transform will replace existing keys."),Object(l.b)("h3",{id:"nested-fields"},"Nested Fields"),Object(l.b)("p",null,"The ",Object(l.b)("inlineCode",{parentName:"p"},"add_fields")," transform will support dotted keys or ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/toml-lang/toml#table"}),"TOML\ntables"),". We recommend the dotted key syntax since it is less\nverbose for this usecase:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{}),'[transforms.<transform-id>]\n  # ...\n\n  [transforms.<transform-id>.fields]\n    parent.child.grandchild = "my_value"\n')),Object(l.b)("p",null,"Results in:"),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "parent.child.grandchild": "my_value"\n}\n')),Object(l.b)("p",null,"Learn more about how ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/about/data-model/log/"}),Object(l.b)("inlineCode",{parentName:"a"},"log")," events")," are structured."),Object(l.b)("h3",{id:"removing-fields"},"Removing Fields"),Object(l.b)("p",null,"See the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/transforms/remove_fields/"}),Object(l.b)("inlineCode",{parentName:"a"},"remove_fields")," transform"),"."),Object(l.b)("h3",{id:"special-characters"},"Special Characters"),Object(l.b)("p",null,"Aside from the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/about/data-model/log/#special-characters"}),"special characters"),"\nlisted in the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/about/data-model/"}),"Data Model")," doc, Vector does not restrict the\ncharacters allowed in keys. You can wrap key names in ",Object(l.b)("inlineCode",{parentName:"p"},'" "')," quote to preserve\nspaces and use ",Object(l.b)("inlineCode",{parentName:"p"},"\\")," to escape quotes."),Object(l.b)("h3",{id:"types"},"Types"),Object(l.b)("p",null,"All supported ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/setup/configuration/#value-types"}),"configuration value types")," are accepted.\nThis includes primitivate types (",Object(l.b)("inlineCode",{parentName:"p"},"string"),", ",Object(l.b)("inlineCode",{parentName:"p"},"int"),", ",Object(l.b)("inlineCode",{parentName:"p"},"float"),", ",Object(l.b)("inlineCode",{parentName:"p"},"boolean"),") and\nspecial types, such as ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#arrays"}),"arrays")," and ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"#nested-fields"}),"nested fields"),"."))}b.isMDXComponent=!0},171:function(e,t,a){var n;!function(){"use strict";var a={}.hasOwnProperty;function r(){for(var e=[],t=0;t<arguments.length;t++){var n=arguments[t];if(n){var l=typeof n;if("string"===l||"number"===l)e.push(n);else if(Array.isArray(n)&&n.length){var i=r.apply(null,n);i&&e.push(i)}else if("object"===l)for(var s in n)a.call(n,s)&&n[s]&&e.push(s)}}return e.join(" ")}e.exports?(r.default=r,e.exports=r):void 0===(n=function(){return r}.apply(t,[]))||(e.exports=n)}()},172:function(e,t,a){"use strict";var n=a(0),r=a(34);t.a=function(){return Object(n.useContext)(r.a)}},173:function(e,t,a){"use strict";a.d(t,"a",(function(){return m})),a.d(t,"b",(function(){return f}));var n=a(0),r=a.n(n);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=r.a.createContext({}),d=function(e){var t=r.a.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):s({},t,{},e)),a},m=function(e){var t=d(e.components);return r.a.createElement(o.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,i=e.parentName,o=c(e,["components","mdxType","originalType","parentName"]),m=d(a),u=n,b=m["".concat(i,".").concat(u)]||m[u]||p[u]||l;return a?r.a.createElement(b,s({ref:t},o,{components:a})):r.a.createElement(b,s({ref:t},o))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,i=new Array(l);i[0]=b;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:n,i[1]=s;for(var o=2;o<l;o++)i[o]=a[o];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}b.displayName="MDXCreateElement"},191:function(e,t,a){"use strict";(function(e){var n=a(1),r=a(0),l=a.n(r),i=a(208),s=a(199),c=a.n(s),o=a(194),d=a(171),m=a.n(d),u=a(206),p=a.n(u),b=a(200),f=a.n(b),h=a(172),O=a(91),j=a.n(O),y=a(177);(void 0!==e?e:window).Prism=o.a,a(201),a(202),a(203),a(204),a(205);const g=/{([\d,-]+)}/;t.a=({children:e,className:t,metastring:a})=>{const{siteConfig:{themeConfig:{prism:s={}}}}=Object(h.a)(),[o,d]=Object(r.useState)(!1),u=Object(r.useRef)(null),b=Object(r.useRef)(null),[O]=Object(y.a)();let v=[];if(a&&g.test(a)){const e=a.match(g)[1];v=f.a.parse(e).filter(e=>e>0)}Object(r.useEffect)(()=>{let e;return b.current&&(e=new c.a(b.current,{target:()=>u.current})),()=>{e&&e.destroy()}},[b.current,u.current]);let N=t&&t.replace(/language-/,"");!N&&s.defaultLanguage&&(N=s.defaultLanguage);const E=()=>{window.getSelection().empty(),d(!0),setTimeout(()=>d(!1),2e3)};let w="dark"==O?s.darkTheme:s.theme;return l.a.createElement(i.a,Object(n.a)({},i.b,{theme:w||p.a,code:e.trim(),language:N}),({className:e,style:t,tokens:a,getLineProps:r,getTokenProps:i})=>l.a.createElement("div",{className:j.a.codeBlockWrapper},l.a.createElement("pre",{ref:u,className:m()(e,j.a.codeBlock),style:t},a.map((e,t)=>{const a=r({line:e,key:t});return v.includes(t+1)&&(a.className=`${a.className} docusaurus-highlight-code-line`),l.a.createElement("div",Object(n.a)({key:t},a),e.map((e,t)=>l.a.createElement("span",Object(n.a)({key:t},i({token:e,key:t})))))})),l.a.createElement("button",{ref:b,type:"button","aria-label":"Copy code to clipboard",className:j.a.copyButton,onClick:E},o?"Copied":"Copy")))}}).call(this,a(48))},207:function(e,t,a){"use strict";var n=a(0),r=a.n(n);a(98);t.a=function({fileName:e,links:t}){let a=[];for(var n in t)a.push(r.a.createElement("a",{href:n.href},n.text||"Learn more&hellip;"));return r.a.createElement("div",{className:"code-header"},a.length>0&&r.a.createElement("span",{className:"code-header--links"},a),e)}},219:function(e,t,a){"use strict";var n=a(0),r=a.n(n);a(99);t.a=function({children:e,filters:t}){const[a,l]=Object(n.useState)(!1),[i,s]=Object(n.useState)(!1),[c,o]=Object(n.useState)(null);let d=Array.isArray(e)?e:[e],m=d.some(e=>e.props.common),u=d.some(e=>e.props.required),p=d;return a&&(p=p.filter(e=>e.props.common)),i&&(p=p.filter(e=>e.props.required)),c&&(p=p.filter(e=>e.props.name.toLowerCase().includes(c.toLowerCase()))),r.a.createElement("div",{className:"fields"},d.length>1&&!1!==t?r.a.createElement("div",{className:"filters"},r.a.createElement("span",{className:"result-count"},p.length," items"),r.a.createElement("div",{className:" search"},r.a.createElement("input",{type:"text",onChange:e=>o(e.currentTarget.value),placeholder:"\ud83d\udd0d Search..."})),r.a.createElement("div",{className:"checkboxes"},m&&r.a.createElement("label",{title:"Only show popular/common results"},r.a.createElement("input",{type:"checkbox",onChange:e=>l(e.currentTarget.checked),checked:a}),"common only"),u&&r.a.createElement("label",{title:"Only show required results"},r.a.createElement("input",{type:"checkbox",onChange:e=>s(e.currentTarget.checked),checked:i}),"required only"))):null,r.a.createElement("div",{className:"section-list"},!Array.isArray(p)||p.length>0?p:r.a.createElement("div",{className:"empty"},r.a.createElement("div",{className:"icon"},"\u2639"),r.a.createElement("div",null,"No fields found"))))}},220:function(e,t,a){"use strict";a(12);var n=a(0),r=a.n(n),l=a(171),i=a.n(l),s=(a(173),a(207)),c=a(191);function o(e){return JSON.stringify(e)}function d(e){return e.includes(".")?'"'+e+'"':e}function m(e,t){return(a=t)&&a.constructor===Object?"name"in t&&"value"in t?`${d(t.name)} = ${o(t.value)}`:`${d(Object.keys(t)[0])} = ${o(Object.values(t)[0])}`:e?`${e} = ${o(t)}`:`${o(t)}`;var a}function u({values:e}){let t=[];if(Array.isArray(e))for(var a in e){let n=e[a];t.push(r.a.createElement("code",{key:n},o(n))),t.push(" ")}else for(var n in e)t.push(r.a.createElement("code",{key:n,title:e[n]},o(n))),t.push(" ");return t}function p({name:e,path:t,value:a}){return r.a.createElement("code",null,m(null,a))}function b({name:e,path:t,values:a}){let n="";return a.forEach((function(t){n+=m(e,t)+"\n"})),t&&(n=`[${t}]\n${n}`),r.a.createElement("div",null,r.a.createElement(s.a,{fileName:"vector.toml"}),r.a.createElement(c.a,{className:"language-toml"},n))}function f({value:e}){let t=Object.keys(e)[0],a=Object.values(e)[0];return r.a.createElement("span",null,r.a.createElement("code",null,r.a.createElement("a",{href:`#${t}`},t))," = ",r.a.createElement("code",null,o(a)))}function h({defaultValue:e,enumValues:t,examples:a,name:l,path:i,relevantWhen:s}){const[c,o]=Object(n.useState)(!1);return e||t||a&&a.length>0?r.a.createElement("div",{className:"info"},void 0!==e?e?r.a.createElement("div",null,"Default: ",r.a.createElement(p,{name:l,path:i,value:e})):r.a.createElement("div",null,"No default"):null,t?r.a.createElement("div",null,"Enum, must be one of: ",r.a.createElement(u,{values:t})):null,s?r.a.createElement("div",null,"Only relevant when: ",r.a.createElement(f,{value:s})):null,r.a.createElement("div",null,r.a.createElement("div",{className:"show-more",onClick:()=>o(!c)},c?"Hide examples":"View examples"),c&&r.a.createElement("div",{className:"examples"},r.a.createElement(b,{name:l,path:i,values:a})))):null}t.a=function({children:e,common:t,defaultValue:a,enumValues:l,examples:s,name:c,path:o,relevantWhen:d,templateable:m,type:u,unit:p,required:b}){const[f,O]=Object(n.useState)(!1);let j=e;return f&&(j=j.filter(e=>"p"!=e.props.originalType)),r.a.createElement("div",{className:i()("field","section",b?"field-required":"",f?"field-collapsed":""),required:b},r.a.createElement("div",{className:"badges"},t&&r.a.createElement("span",{className:"badge badge--primary",title:"This is a popular that we recommend for getting started"},"common"),m&&r.a.createElement("span",{className:"badge badge--primary",title:"This option is dynamic and accepts the Vector template syntax"},"templateable"),r.a.createElement("span",{className:"badge badge--secondary"},u),l&&Object.keys(l).length>0&&r.a.createElement("span",{className:"badge badge--secondary",title:"This option is an enumation and only allows specific values"},"enum"),p&&r.a.createElement("span",{className:"badge badge--secondary"},p),b?r.a.createElement("span",{className:"badge badge--danger"},"required"):r.a.createElement("span",{className:"badge badge--secondary"},"optional")),j,!f&&r.a.createElement(h,{defaultValue:a,enumValues:l,examples:s,name:c,path:o,relevantWhen:d}))}}}]);