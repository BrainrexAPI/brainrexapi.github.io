<?xml version="1.0" encoding="utf-8"?>
<!-- Generator: Adobe Illustrator 24.0.1, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
	 viewBox="0 0 1139 752" style="enable-background:new 0 0 1139 752;" xml:space="preserve">
<style type="text/css">
	.st0{fill:#FFFFFF;fill-opacity:0.25;}
	.st1{fill:none;stroke:#000000;}
	.st2{fill:none;}
	.st3{fill:#10E7FF;}
	.st4{font-family:'ArialMT';}
	.st5{font-size:16px;}
	.st6{font-family:'NHaasGroteskDSPro-55Rg';}
	.st7{font-family:'Arial-BoldMT';}
	.st8{fill:#3A7DD1;}
	.st9{font-family:'NHaasGroteskDSPro-65Md';}
	.st10{font-size:14px;}
	.st11{letter-spacing:33;}
	.st12{fill:#0092A8;}
	.st13{fill:url(#Line-7_4_);}
	.st14{fill:#3F80D2;}
	.st15{fill:url(#Line-7_5_);}
	.st16{fill:url(#Line-7_6_);}
	.st17{font-size:12px;}
</style>
<title>Configuration</title>
<desc>Created with Sketch.</desc>
<g id="Configuration_1_">
	<g id="Custom-Preset-3" transform="translate(0.000000, -16.000000)">
		<g id="Configuration" transform="translate(0.000000, 16.000000)">
			<path id="Line" class="st0" d="M46,178l0,2l3,0l0-2L46,178z M56,178l0,2l3,0l0-2L56,178z M66,178l0,2l3,0l0-2L66,178z M76,178
				l0,2l3,0l0-2L76,178z M86,178l0,2l3,0l0-2L86,178z M96,177.9l0,2l3,0l0-2L96,177.9z M106,177.9l0,2l3,0l0-2L106,177.9z
				 M116,177.9l0,2l3,0l0-2L116,177.9z M126,177.9l0,2l3,0l0-2L126,177.9z M136,177.9l0,2l3,0l0-2L136,177.9z M146,177.9l0,2l3,0
				l0-2L146,177.9z M156,177.9l0,2l3,0l0-2L156,177.9z M166,177.8l0,2l3,0l0-2L166,177.8z M176,177.8l0,2l3,0l0-2L176,177.8z
				 M186,177.8l0,2l3,0l0-2L186,177.8z M196,177.8l0,2l3,0l0-2L196,177.8z M206,177.8l0,2l3,0l0-2L206,177.8z M216,177.8l0,2l3,0
				l0-2L216,177.8z M226,177.8l0,2l3,0l0-2L226,177.8z M236,177.8l0,2l3,0l0-2L236,177.8z M246,177.7l0,2l3,0l0-2L246,177.7z
				 M256,177.7l0,2l3,0l0-2L256,177.7z M266,177.7l0,2l3,0l0-2L266,177.7z M276,177.7l0,2l3,0l0-2L276,177.7z M286,177.7l0,2l3,0
				l0-2L286,177.7z M296,177.7l0,2l3,0l0-2L296,177.7z M306,177.7l0,2l3,0l0-2L306,177.7z M316,177.7l0,2l3,0l0-2L316,177.7z
				 M326,177.6l0,2l3,0l0-2L326,177.6z M336,177.6l0,2l3,0l0-2L336,177.6z M346,177.6l0,2l3,0l0-2L346,177.6z M356,177.6l0,2l3,0
				l0-2L356,177.6z M366,177.6l0,2l3,0l0-2L366,177.6z M376,177.6l0,2l3,0l0-2L376,177.6z M386,177.6l0,2l3,0l0-2L386,177.6z
				 M396,177.6l0,2l3,0l0-2L396,177.6z M406,177.5l0,2l3,0l0-2L406,177.5z M416,177.5l0,2l3,0l0-2L416,177.5z M426,177.5l0,2l3,0
				l0-2L426,177.5z M436,177.5l0,2l3,0l0-2L436,177.5z"/>
			<path id="Line-Copy" class="st0" d="M46,461l0,2l3,0l0-2L46,461z M56,461l0,2l3,0l0-2L56,461z M66,461l0,2l3,0l0-2L66,461z
				 M76,461l0,2l3,0l0-2L76,461z M86,461l0,2l3,0l0-2L86,461z M96,460.9l0,2l3,0l0-2L96,460.9z M106,460.9l0,2l3,0l0-2L106,460.9z
				 M116,460.9l0,2l3,0l0-2L116,460.9z M126,460.9l0,2l3,0l0-2L126,460.9z M136,460.9l0,2l3,0l0-2L136,460.9z M146,460.9l0,2l3,0
				l0-2L146,460.9z M156,460.9l0,2l3,0l0-2L156,460.9z M166,460.8l0,2l3,0l0-2L166,460.8z M176,460.8l0,2l3,0l0-2L176,460.8z
				 M186,460.8l0,2l3,0l0-2L186,460.8z M196,460.8l0,2l3,0l0-2L196,460.8z M206,460.8l0,2l3,0l0-2L206,460.8z M216,460.8l0,2l3,0
				l0-2L216,460.8z M226,460.8l0,2l3,0l0-2L226,460.8z M236,460.8l0,2l3,0l0-2L236,460.8z M246,460.7l0,2l3,0l0-2L246,460.7z
				 M256,460.7l0,2l3,0l0-2L256,460.7z M266,460.7l0,2l3,0l0-2L266,460.7z M276,460.7l0,2l3,0l0-2L276,460.7z M286,460.7l0,2l3,0
				l0-2L286,460.7z M296,460.7l0,2l3,0l0-2L296,460.7z M306,460.7l0,2l3,0l0-2L306,460.7z M316,460.7l0,2l3,0l0-2L316,460.7z
				 M326,460.6l0,2l3,0l0-2L326,460.6z M336,460.6l0,2l3,0l0-2L336,460.6z M346,460.6l0,2l3,0l0-2L346,460.6z M356,460.6l0,2l3,0
				l0-2L356,460.6z M366,460.6l0,2l3,0l0-2L366,460.6z M376,460.6l0,2l3,0l0-2L376,460.6z M386,460.6l0,2l3,0l0-2L386,460.6z
				 M396,460.6l0,2l3,0l0-2L396,460.6z M406,460.5l0,2l3,0l0-2L406,460.5z M416,460.5l0,2l3,0l0-2L416,460.5z M426,460.5l0,2l3,0
				l0-2L426,460.5z M436,460.5l0,2l3,0l0-2L436,460.5z"/>
			<path id="config-file-bg" class="st1" d="M25.2,22.5h569.5c8.4,0,15.2,4.5,15.2,10v709c0,5.5-6.8,10-15.2,10H25.2
				c-8.4,0-15.2-4.5-15.2-10v-709C10,27,16.8,22.5,25.2,22.5z"/>
			<polygon id="Line-6" class="st2" points="685,205 685,204 340,204 340,205 			"/>
			<polygon id="Line-6_1_" points="685,333 685,334 402,334 402,333 			"/>
			<polygon id="Line-6_2_" points="685,49 685,50 288,50 288,49 			"/>
			<polygon id="Line-6_3_" points="685,491 685,490 229,490 229,491 			"/>
			<polygon id="Line-6_4_" points="685,622 685,623 229,623 229,622 			"/>
			<text transform="matrix(1 0 0 1 711 747)" class="st3 st4 st5">Learn more about Vector&apos;s configuration</text>
			<text transform="matrix(1 0 0 1 711 51)" class="st6 st5">1. Import Client Library</text>
			<text transform="matrix(1 0 0 1 711 75)" class="st4 st5">This can be a file, journald, STDIn, TCP, and more.</text>
			<text transform="matrix(1 0 0 1 711 99)" class="st4 st5">Vector collects data in any shape from many sources.</text>
			<text transform="matrix(1 0 0 1 711 123)" class="st3 st4 st5">View the file source</text>
			<text transform="matrix(1 0 0 1 711 206)" class="st7 st5">2. </text>
			<text transform="matrix(1 0 0 1 711 230)" class="st4 st5">Common parsers are included out of the box with </text>
			<text transform="matrix(1 0 0 1 711 254)" class="st4 st5">support for custom Regex and LUA scripting.</text>
			<text transform="matrix(1 0 0 1 711 278)" class="st3 st4 st5">View the tokenizer transform</text>
			<text transform="matrix(1 0 0 1 711 334)" class="st7 st5">3. Sample &amp; Reduce Volumne</text>
			<text transform="matrix(1 0 0 1 711 358)" class="st4 st5">Reduce volume by sampling data and removing </text>
			<text transform="matrix(1 0 0 1 711 382)" class="st4 st5">superflous events.</text>
			<text transform="matrix(1 0 0 1 711 406)" class="st3 st4 st5">View the sampler transform</text>
			<text transform="matrix(1 0 0 1 711 492)" class="st7 st5">4. Aggregate &amp; Search</text>
			<text transform="matrix(1 0 0 1 711 516)" class="st4 st5">Stream your data to Elasticsearch (or the storage of your </text>
			<text transform="matrix(1 0 0 1 711 540)" class="st4 st5">choice) to aggregate, search, and analyze.</text>
			<text transform="matrix(1 0 0 1 711 564)" class="st3 st4 st5">View the elasticsearch sink</text>
			<text transform="matrix(1 0 0 1 711 624)" class="st7 st5">5. Archive</text>
			<text transform="matrix(1 0 0 1 711 648)" class="st4 st5">Archive everything in a compressed format in a cheap </text>
			<text transform="matrix(1 0 0 1 711 672)" class="st4 st5">durable storage like S3.</text>
			<text transform="matrix(1 0 0 1 711 696)" class="st3 st4 st5">View the s3 sink</text>
			<text transform="matrix(1 0 0 1 65.9987 55)" class="st8 st9 st10">import brainrex</text>
			<text transform="matrix(1 0 0 1 65.9987 81)" class="st8 st9 st10">configuration = brainrex.Configuration()</text>
			<text transform="matrix(1 0 0 1 65.9987 107)" class="st8 st9 st10">configuration.api_key[&apos;x-api-key&apos;] = &apos;API_KEY&apos; </text>
			<text transform="matrix(1 0 0 1 65.9987 185)" class="st8 st9 st10 st11">	</text>
			<text transform="matrix(1 0 0 1 65.9987 341)" class="st12 st9 st10">for </text>
			<text transform="matrix(1 0 0 1 65.9987 367)" class="st12 st9 st10">inputs = [&apos;nginx_transaction_sampler&apos;]</text>
			<text transform="matrix(1 0 0 1 65.9987 393)" class="st12 st9 st10">type = &apos;elasticsearch&apos;</text>
			<text transform="matrix(1 0 0 1 65.9987 419)" class="st12 st9 st10">host = &apos;123.123.123.123:5000&apos;</text>
			<text transform="matrix(1 0 0 1 65.9987 471)" class="st12 st9 st10">send data to sources</text>
			<text transform="matrix(1 0 0 1 65.9987 497)" class="st12 st9 st10">inputs = [&apos;nginx_error_parser&apos;]</text>
			<text transform="matrix(1 0 0 1 65.9987 523)" class="st12 st9 st10">type = &apos;s3&apos;</text>
			<text transform="matrix(1 0 0 1 65.9987 549)" class="st12 st9 st10">region = &apos;us-east-1&apos;</text>
			<text transform="matrix(1 0 0 1 65.9987 575)" class="st12 st9 st10">bucket = &apos;log-archives&apos;</text>
			
				<linearGradient id="Line-7_4_" gradientUnits="userSpaceOnUse" x1="457.7973" y1="428.1169" x2="457.7973" y2="427.1169" gradientTransform="matrix(37 0 0 -154 -16896 65978)">
				<stop  offset="0" style="stop-color:#B96ECE"/>
				<stop  offset="1" style="stop-color:#3F80D2"/>
			</linearGradient>
			<path id="Line-7" class="st13" d="M59.9,48l1.1,1.1l-0.5,0.5c-23.3,23.6-34.9,48.9-34.9,75.8c0,28.4,9.3,51.5,27.8,69.5l2.6-3.1
				l4.2,10.2l-10.5-2.7l2.7-3.2C33.4,177.9,24,154.3,24,125.5C24,98.4,35.6,73,58.7,49.3l0.7-0.7L59.9,48z"/>
			<path id="Line-7_1_" class="st14" d="M60,215l1,1.2l-0.6,0.5c-19.9,17.4-29.8,36-29.8,55.8c0,20.2,7.4,36.8,22.1,49.8l2.6-3.2
				l4.8,10l-11-2.2l2.6-3.3c-15.1-13.3-22.7-30.3-22.7-51c0-20.1,9.9-38.9,29.8-56.4l0.6-0.5L60,215z"/>
			
				<linearGradient id="Line-7_5_" gradientUnits="userSpaceOnUse" x1="462.9193" y1="426.8212" x2="462.9193" y2="425.8212" gradientTransform="matrix(62 0 0 -397 -28670 169662)">
				<stop  offset="0" style="stop-color:#3F80D2"/>
				<stop  offset="1" style="stop-color:#019BB4"/>
			</linearGradient>
			<path id="Line-7_2_" class="st15" d="M61,214l1,1.2l-0.6,0.5C21.5,248.1,1.6,299.3,1.6,369.4c0,79.3,18.3,156.3,54.9,230.9
				l0.7,1.5l3.8-1.9l0,11.1l-9-6.6l3.8-1.9l-0.8-1.5C18.4,526.1,0,448.9,0,369.4c0-69.8,19.7-121.1,59.2-153.9l1.2-1L61,214z"/>
			
				<linearGradient id="Line-7_6_" gradientUnits="userSpaceOnUse" x1="457.7973" y1="428.2329" x2="457.7973" y2="427.2329" gradientTransform="matrix(37 0 0 -146 -16896 62863)">
				<stop  offset="0" style="stop-color:#3F80D2"/>
				<stop  offset="1" style="stop-color:#009CB4"/>
			</linearGradient>
			<path id="Line-7_3_" class="st16" d="M60,341l1,1.1l-0.6,0.5c-23.3,22.4-34.9,46.3-34.9,71.8c0,26.8,9.2,48.7,27.6,65.7l2.6-3.2
				l4.4,10l-10.6-2.4l2.6-3.2C33.4,464.1,24,441.7,24,414.5c0-25.7,11.6-49.8,34.7-72.3l0.7-0.7L60,341z"/>
		</g>
	</g>
</g>
<text transform="matrix(1 0 0 1 49.0015 16)" class="st9 st17">simple_pipeline.py</text>
<text transform="matrix(1 0 0 1 64.9556 192.3218)"><tspan x="0" y="0" class="st9 st17">tweets_dataframe = pd.read_csv(&apos;https://s3-eu-west-1.amazonaws.com/brainrex.com/data/sample_text_data.csv&apos;)</tspan><tspan x="0" y="14.4" class="st9 st17">tweetList= tweets_dataframe.Tweet.to_list()</tspan><tspan x="0" y="43.2" class="st9 st17">for index, tweet in enumerate(tweetList[344:366]): </tspan><tspan x="0" y="57.6" class="st9 st17">    try:</tspan><tspan x="0" y="72" class="st9 st17">        text = brainrex.Text(tweet)</tspan><tspan x="0" y="86.4" class="st9 st17">        investor_score = api_instance.language_get_price_sentiment(text)</tspan><tspan x="0" y="100.8" class="st9 st17">        sentiment_score = api_instance.language_get_general_sentiment(text)</tspan><tspan x="0" y="115.2" class="st9 st17">        print(&apos;Sentence {} investor score of {}, general sentiment score {}&apos;.format(index, investor_score, sentiment_score))</tspan></text>
<text transform="matrix(1 0 0 1 460 302)" class="st9 st17">Lorem ipsum</text>
</svg>
